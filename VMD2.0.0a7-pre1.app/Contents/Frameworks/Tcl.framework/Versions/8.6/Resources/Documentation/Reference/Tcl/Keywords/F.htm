<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML>
<HEAD><TITLE>Tcl Keywords - F</TITLE>
<link rel="stylesheet" href="../docs.css" type="text/css" media="all">
</HEAD>
<BODY><H2><a href="../contents.htm">Tcl8.6.16 Documentation</a> <small>&gt;</small> Tcl Keywords - F</H2>
<H3><A HREF="../UserCmd/contents.htm">Tcl Applications</A> | <A HREF="../TclCmd/contents.htm">Tcl Commands</A> | <A HREF="../ItclCmd/contents.htm">[incr Tcl] Package Commands</A> | <A HREF="../SqliteCmd/contents.htm">SQLite3 Package Commands</A> | <A HREF="../TdbcCmd/contents.htm">TDBC Package Commands</A> | <A HREF="../TdbcmysqlCmd/contents.htm">tdbc::mysql Package Commands</A> | <A HREF="../TdbcodbcCmd/contents.htm">tdbc::odbc Package Commands</A> | <A HREF="../TdbcpostgresCmd/contents.htm">tdbc::postgres Package Commands</A> | <A HREF="../TdbcsqliteCmd/contents.htm">tdbc::sqlite3 Package Commands</A> | <A HREF="../ThreadCmd/contents.htm">Thread Package Commands</A> | <A HREF="../TclLib/contents.htm">Tcl C API</A> | <A HREF="../ItclLib/contents.htm">[incr Tcl] Package C API</A> | <A HREF="../TdbcLib/contents.htm">TDBC Package C API</A></H3>
<H3><A HREF="A.htm">A</A> |
<A HREF="B.htm">B</A> |
<A HREF="C.htm">C</A> |
<A HREF="D.htm">D</A> |
<A HREF="E.htm">E</A> |
<A HREF="F.htm">F</A> |
<A HREF="G.htm">G</A> |
<A HREF="H.htm">H</A> |
<A HREF="I.htm">I</A> |
<A HREF="J.htm">J</A> |
<A HREF="K.htm">K</A> |
<A HREF="L.htm">L</A> |
<A HREF="M.htm">M</A> |
<A HREF="N.htm">N</A> |
<A HREF="O.htm">O</A> |
<A HREF="P.htm">P</A> |
<A HREF="Q.htm">Q</A> |
<A HREF="R.htm">R</A> |
<A HREF="S.htm">S</A> |
<A HREF="T.htm">T</A> |
<A HREF="U.htm">U</A> |
<A HREF="V.htm">V</A> |
<A HREF="W.htm">W</A> |
X |
Y |
<A HREF="Z.htm">Z</A></H3>
<DL class="keylist">
<DT><A NAME="false">false</A></DT>
<DD>
<A HREF="../TclCmd/if.htm" TITLE="if - Execute scripts conditionally">if</A></DD>
<DT><A NAME="fatal">fatal</A></DT>
<DD>
<A HREF="../TclLib/Panic.htm" TITLE="Tcl_Panic, Tcl_PanicVA, Tcl_SetPanicProc - report fatal error and abort">Panic</A></DD>
<DT><A NAME="file">file</A></DT>
<DD>
<A HREF="../TclCmd/file.htm" TITLE="file - Manipulate file names and attributes">file</A>, <A HREF="../TclCmd/glob.htm" TITLE="glob - Return names of files that match patterns">glob</A>, <A HREF="../TclCmd/open.htm" TITLE="open - Open a file-based or command pipeline channel">open</A>, <A HREF="../TclCmd/pid.htm" TITLE="pid - Retrieve process identifiers">pid</A>, <A HREF="../TclCmd/seek.htm" TITLE="seek - Change the access position for an open channel">seek</A>, <A HREF="../TclCmd/source.htm" TITLE="source - Evaluate a file or resource as a Tcl script">source</A>, <A HREF="../TclLib/CrtFileHdlr.htm" TITLE="Tcl_CreateFileHandler, Tcl_DeleteFileHandler - associate procedure callbacks with files or devices (Unix only)">CrtFileHdlr</A>, <A HREF="../TclLib/Eval.htm" TITLE="Tcl_EvalObjEx, Tcl_EvalFile, Tcl_EvalObjv, Tcl_Eval, Tcl_EvalEx, Tcl_GlobalEval, Tcl_GlobalEvalObj, Tcl_VarEval, Tcl_VarEvalVA - execute Tcl scripts">Eval</A>, <A HREF="../TclLib/SplitPath.htm" TITLE="Tcl_SplitPath, Tcl_JoinPath, Tcl_GetPathType - manipulate platform-dependent file paths">SplitPath</A></DD>
<DT><A NAME="file events">file events</A></DT>
<DD>
<A HREF="../TclLib/Notifier.htm" TITLE="Tcl_CreateEventSource, Tcl_DeleteEventSource, Tcl_SetMaxBlockTime, Tcl_QueueEvent, Tcl_ThreadQueueEvent, Tcl_ThreadAlert, Tcl_GetCurrentThread, Tcl_DeleteEvents, Tcl_InitNotifier, Tcl_FinalizeNotifier, Tcl_WaitForEvent, Tcl_AlertNotifier, Tcl_SetTimer, Tcl_ServiceAll, Tcl_ServiceEvent, Tcl_GetServiceMode, Tcl_SetServiceMode, Tcl_ServiceModeHook, Tcl_SetNotifier - the event queue and notifier interfaces">Notifier</A></DD>
<DT><A NAME="file handle">file handle</A></DT>
<DD>
<A HREF="../TclLib/GetOpnFl.htm" TITLE="Tcl_GetOpenFile - Return a FILE* for a channel registered in the given interpreter (Unix only)">GetOpnFl</A></DD>
<DT><A NAME="file name">file name</A></DT>
<DD>
<A HREF="../TclLib/Translate.htm" TITLE="Tcl_TranslateFileName - convert file name to native form and replace tilde with home directory">Translate</A></DD>
<DT><A NAME="filename">filename</A></DT>
<DD>
<A HREF="../TclLib/SplitPath.htm" TITLE="Tcl_SplitPath, Tcl_JoinPath, Tcl_GetPathType - manipulate platform-dependent file paths">SplitPath</A></DD>
<DT><A NAME="filesystem">filesystem</A></DT>
<DD>
<A HREF="../TclLib/FileSystem.htm" TITLE="Tcl_FSRegister, Tcl_FSUnregister, Tcl_FSData, Tcl_FSMountsChanged, Tcl_FSGetFileSystemForPath, Tcl_FSGetPathType, Tcl_FSCopyFile, Tcl_FSCopyDirectory, Tcl_FSCreateDirectory, Tcl_FSDeleteFile, Tcl_FSRemoveDirectory, Tcl_FSRenameFile, Tcl_FSListVolumes, Tcl_FSEvalFile, Tcl_FSEvalFileEx, Tcl_FSLoadFile, Tcl_FSUnloadFile, Tcl_FSMatchInDirectory, Tcl_FSLink, Tcl_FSLstat, Tcl_FSUtime, Tcl_FSFileAttrsGet, Tcl_FSFileAttrsSet, Tcl_FSFileAttrStrings, Tcl_FSStat, Tcl_FSAccess, Tcl_FSOpenFileChannel, Tcl_FSGetCwd, Tcl_FSChdir, Tcl_FSPathSeparator, Tcl_FSJoinPath, Tcl_FSSplitPath, Tcl_FSEqualPaths, Tcl_FSGetNormalizedPath, Tcl_FSJoinToPath, Tcl_FSConvertToPathType, Tcl_FSGetInternalRep, Tcl_FSGetTranslatedPath, Tcl_FSGetTranslatedStringPath, Tcl_FSNewNativePath, Tcl_FSGetNativePath, Tcl_FSFileSystemInfo, Tcl_GetAccessTimeFromStat, Tcl_GetBlockSizeFromStat, Tcl_GetBlocksFromStat, Tcl_GetChangeTimeFromStat, Tcl_GetDeviceTypeFromStat, Tcl_GetFSDeviceFromStat, Tcl_GetFSInodeFromStat, Tcl_GetGroupIdFromStat, Tcl_GetLinkCountFromStat, Tcl_GetModeFromStat, Tcl_GetModificationTimeFromStat, Tcl_GetSizeFromStat, Tcl_GetUserIdFromStat, Tcl_AllocStatBuf - procedures to interact with any filesystem">FileSystem</A></DD>
<DT><A NAME="filter">filter</A></DT>
<DD>
<A HREF="../TclCmd/dict.htm" TITLE="dict - Manipulate dictionaries">dict</A>, <A HREF="../TclCmd/fconfigure.htm" TITLE="fconfigure - Set and get options on a channel">fconfigure</A></DD>
<DT><A NAME="final">final</A></DT>
<DD>
<A HREF="../TclCmd/try.htm" TITLE="try - Trap and process errors and exceptions">try</A></DD>
<DT><A NAME="find">find</A></DT>
<DD>
<A HREF="../ItclLib/Class.htm" TITLE="Itcl_CreateClass, Itcl_DeleteClass, Itcl_FindClass, Itcl_IsClass, Itcl_IsClassNamespace - Manipulate classes.">Class</A></DD>
<DT><A NAME="floating-point">floating-point</A></DT>
<DD>
<A HREF="../TclLib/GetInt.htm" TITLE="Tcl_GetInt, Tcl_GetDouble, Tcl_GetBoolean - convert from string to integer, double, or boolean">GetInt</A>, <A HREF="../TclLib/PrintDbl.htm" TITLE="Tcl_PrintDouble - Convert floating value to string">PrintDbl</A></DD>
<DT><A NAME="flush">flush</A></DT>
<DD>
<A HREF="../TclCmd/flush.htm" TITLE="flush - Flush buffered output for a channel">flush</A>, <A HREF="../TclCmd/update.htm" TITLE="update - Process pending events and idle callbacks">update</A>, <A HREF="../TclLib/OpenFileChnl.htm" TITLE="Tcl_OpenFileChannel, Tcl_OpenCommandChannel, Tcl_MakeFileChannel, Tcl_GetChannel, Tcl_GetChannelNames, Tcl_GetChannelNamesEx, Tcl_RegisterChannel, Tcl_UnregisterChannel, Tcl_DetachChannel, Tcl_IsStandardChannel, Tcl_Close, Tcl_ReadChars, Tcl_Read, Tcl_GetsObj, Tcl_Gets, Tcl_WriteObj, Tcl_WriteChars, Tcl_Write, Tcl_Flush, Tcl_Seek, Tcl_Tell, Tcl_TruncateChannel, Tcl_GetChannelOption, Tcl_SetChannelOption, Tcl_Eof, Tcl_InputBlocked, Tcl_InputBuffered, Tcl_OutputBuffered, Tcl_Ungets, Tcl_ReadRaw, Tcl_WriteRaw - buffered I/O facilities using channels">OpenFileChnl</A></DD>
<DT><A NAME="flushing">flushing</A></DT>
<DD>
<A HREF="../TclCmd/fconfigure.htm" TITLE="fconfigure - Set and get options on a channel">fconfigure</A></DD>
<DT><A NAME="for">for</A></DT>
<DD>
<A HREF="../TclCmd/for.htm" TITLE="for - 'For' loop">for</A></DD>
<DT><A NAME="foreach">foreach</A></DT>
<DD>
<A HREF="../TclCmd/foreach.htm" TITLE="foreach - Iterate over all elements in one or more lists">foreach</A>, <A HREF="../TclCmd/lmap.htm" TITLE="lmap - Iterate over all elements in one or more lists and collect results">lmap</A></DD>
<DT><A NAME="format">format</A></DT>
<DD>
<A HREF="../TclCmd/binary.htm" TITLE="binary - Insert and extract fields from binary strings">binary</A>, <A HREF="../TclCmd/format.htm" TITLE="format - Format a string in the style of sprintf">format</A></DD>
<DT><A NAME="frame">frame</A></DT>
<DD>
<A HREF="../TclCmd/upvar.htm" TITLE="upvar - Create link to variable in a different stack frame">upvar</A></DD>
<DT><A NAME="free">free</A></DT>
<DD>
<A HREF="../TclLib/Alloc.htm" TITLE="Tcl_Alloc, Tcl_Free, Tcl_Realloc, Tcl_AttemptAlloc, Tcl_AttemptRealloc, Tcl_GetMemoryInfo, ckalloc, ckfree, ckrealloc, attemptckalloc, attemptckrealloc - allocate or free heap memory">Alloc</A>, <A HREF="../TclLib/DString.htm" TITLE="Tcl_DStringInit, Tcl_DStringAppend, Tcl_DStringAppendElement, Tcl_DStringStartSublist, Tcl_DStringEndSublist, Tcl_DStringLength, Tcl_DStringValue, Tcl_DStringSetLength, Tcl_DStringTrunc, Tcl_DStringFree, Tcl_DStringResult, Tcl_DStringGetResult - manipulate dynamic strings">DString</A>, <A HREF="../TclLib/Interp.htm" TITLE="Tcl_Interp - client-visible fields of interpreter structures">Interp</A>, <A HREF="../TclLib/Preserve.htm" TITLE="Tcl_Preserve, Tcl_Release, Tcl_EventuallyFree - avoid freeing storage while it is being used">Preserve</A>, <A HREF="../ItclLib/Object.htm" TITLE="Itcl_CreateObject, Itcl_DeleteObject, Itcl_FindObject, Itcl_IsObject, Itcl_IsObjectIsa - Manipulate an class instance.">Object</A>, <A HREF="../ItclLib/Preserve.htm" TITLE="Itcl_Alloc, Itcl_Free, Itcl_PreserveData, Itcl_ReleaseData, Itcl_EventuallyFree - Manipulate an Itcl list object.">Preserve</A></DD>
<DT><A NAME="fuzzy comparison">fuzzy comparison</A></DT>
<DD>
<A HREF="../TclCmd/expr.htm" TITLE="expr - Evaluate an expression">expr</A></DD>
</DL>
<div class="copy">Copyright &copy; 1989-1994 The Regents of the University of California
<BR>Copyright &copy; 1992-1999 Karl Lehenbauer &amp; Mark Diekhans
<BR>Copyright &copy; 1993-1997 Bell Labs Innovations for Lucent Technologies
<BR>Copyright &copy; 1993-1998 Lucent Technologies, Inc
<BR>Copyright &copy; 1994-2000 Sun Microsystems, Inc
<BR>Copyright &copy; 1997-2000 Ajuba Solutions
<BR>Copyright &copy; 1998 Mark Harrison
<BR>Copyright &copy; 1998-2000 Scriptics Corporation
<BR>Copyright &copy; 2001 ActiveState Tool Corp
<BR>Copyright &copy; 2001 Vincent Darley
<BR>Copyright &copy; 2001-2004 ActiveState Corporation
<BR>Copyright &copy; 2001-2005 Kevin B. Kenny &lt;kennykb(at)acm.org&gt;
<BR>Copyright &copy; 2001-2012 Donal K. Fellows
<BR>Copyright &copy; 2002-2010 Andreas Kupries &lt;andreas_kupries(at)users.sourceforge.net&gt;
<BR>Copyright &copy; 2003 George Petasis &lt;petasis(at)iit.demokritos.gr&gt;
<BR>Copyright &copy; 2003 Simon Geard
<BR>Copyright &copy; 2005 Sergey Brester aka sebres
<BR>Copyright &copy; 2006 Miguel Sofer
<BR>Copyright &copy; 2006-2008 ActiveState Software Inc
<BR>Copyright &copy; 2006-2008 Joe Mistachkin
<BR>Copyright &copy; 2008 Arnulf Wiedemann
<BR>Copyright &copy; 2008 Pat Thoyts
<BR>Copyright &copy; 2008 Peter Spjuth &lt;pspjuth(at)users.sourceforge.net&gt;
<BR>Copyright &copy; 2008-2010 Kevin B. Kenny
<BR>Copyright &copy; 2012 Trevor Davel
</div>
</BODY></HTML>
