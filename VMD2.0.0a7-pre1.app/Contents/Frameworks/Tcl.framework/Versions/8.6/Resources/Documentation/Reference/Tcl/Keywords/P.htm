<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML>
<HEAD><TITLE>Tcl Keywords - P</TITLE>
<link rel="stylesheet" href="../docs.css" type="text/css" media="all">
</HEAD>
<BODY><H2><a href="../contents.htm">Tcl8.6.16 Documentation</a> <small>&gt;</small> Tcl Keywords - P</H2>
<H3><A HREF="../UserCmd/contents.htm">Tcl Applications</A> | <A HREF="../TclCmd/contents.htm">Tcl Commands</A> | <A HREF="../ItclCmd/contents.htm">[incr Tcl] Package Commands</A> | <A HREF="../SqliteCmd/contents.htm">SQLite3 Package Commands</A> | <A HREF="../TdbcCmd/contents.htm">TDBC Package Commands</A> | <A HREF="../TdbcmysqlCmd/contents.htm">tdbc::mysql Package Commands</A> | <A HREF="../TdbcodbcCmd/contents.htm">tdbc::odbc Package Commands</A> | <A HREF="../TdbcpostgresCmd/contents.htm">tdbc::postgres Package Commands</A> | <A HREF="../TdbcsqliteCmd/contents.htm">tdbc::sqlite3 Package Commands</A> | <A HREF="../ThreadCmd/contents.htm">Thread Package Commands</A> | <A HREF="../TclLib/contents.htm">Tcl C API</A> | <A HREF="../ItclLib/contents.htm">[incr Tcl] Package C API</A> | <A HREF="../TdbcLib/contents.htm">TDBC Package C API</A></H3>
<H3><A HREF="A.htm">A</A> |
<A HREF="B.htm">B</A> |
<A HREF="C.htm">C</A> |
<A HREF="D.htm">D</A> |
<A HREF="E.htm">E</A> |
<A HREF="F.htm">F</A> |
<A HREF="G.htm">G</A> |
<A HREF="H.htm">H</A> |
<A HREF="I.htm">I</A> |
<A HREF="J.htm">J</A> |
<A HREF="K.htm">K</A> |
<A HREF="L.htm">L</A> |
<A HREF="M.htm">M</A> |
<A HREF="N.htm">N</A> |
<A HREF="O.htm">O</A> |
<A HREF="P.htm">P</A> |
<A HREF="Q.htm">Q</A> |
<A HREF="R.htm">R</A> |
<A HREF="S.htm">S</A> |
<A HREF="T.htm">T</A> |
<A HREF="U.htm">U</A> |
<A HREF="V.htm">V</A> |
<A HREF="W.htm">W</A> |
X |
Y |
<A HREF="Z.htm">Z</A></H3>
<DL class="keylist">
<DT><A NAME="package">package</A></DT>
<DD>
<A HREF="../TclCmd/package.htm" TITLE="package - Facilities for package loading and version control">package</A>, <A HREF="../TclCmd/packagens.htm" TITLE="pkg::create - Construct an appropriate 'package ifneeded' command for a given package specification">packagens</A>, <A HREF="../TclCmd/pkgMkIndex.htm" TITLE="pkg_mkIndex - Build an index for automatic loading of packages">pkgMkIndex</A>, <A HREF="../TclCmd/tm.htm" TITLE="tm - Facilities for locating and loading of Tcl Modules">tm</A>, <A HREF="../TclLib/PkgRequire.htm" TITLE="Tcl_PkgRequire, Tcl_PkgRequireEx, Tcl_PkgRequireProc, Tcl_PkgPresent, Tcl_PkgPresentEx, Tcl_PkgProvide, Tcl_PkgProvideEx - package version control">PkgRequire</A>, <A HREF="../TclLib/StaticPkg.htm" TITLE="Tcl_StaticPackage - make a statically linked package available via the 'load' command">StaticPkg</A></DD>
<DT><A NAME="parent">parent</A></DT>
<DD>
<A HREF="../TclLib/CrtAlias.htm" TITLE="Tcl_IsSafe, Tcl_MakeSafe, Tcl_CreateChild, Tcl_CreateSlave, Tcl_GetChild, Tcl_GetSlave, Tcl_GetParent, Tcl_GetMaster, Tcl_GetInterpPath, Tcl_CreateAlias, Tcl_CreateAliasObj, Tcl_GetAlias, Tcl_GetAliasObj, Tcl_ExposeCommand, Tcl_HideCommand - manage multiple Tcl interpreters, aliases and hidden commands">CrtAlias</A></DD>
<DT><A NAME="parent interpreter">parent interpreter</A></DT>
<DD>
<A HREF="../TclCmd/interp.htm" TITLE="interp - Create and manipulate Tcl interpreters">interp</A>, <A HREF="../TclCmd/safe.htm" TITLE="safe - Creating and manipulating safe interpreters">safe</A></DD>
<DT><A NAME="parse">parse</A></DT>
<DD>
<A HREF="../TclCmd/scan.htm" TITLE="scan - Parse string using conversion specifiers in the style of sscanf">scan</A>, <A HREF="../TclLib/Backslash.htm" TITLE="Tcl_Backslash - parse a backslash sequence">Backslash</A>, <A HREF="../TclLib/ParseArgs.htm" TITLE="Tcl_ParseArgsObjv - parse arguments according to a tabular description">ParseArgs</A>, <A HREF="../TclLib/ParseCmd.htm" TITLE="Tcl_ParseCommand, Tcl_ParseExpr, Tcl_ParseBraces, Tcl_ParseQuotedString, Tcl_ParseVarName, Tcl_ParseVar, Tcl_FreeParse, Tcl_EvalTokens, Tcl_EvalTokensStandard - parse Tcl scripts and expressions">ParseCmd</A></DD>
<DT><A NAME="parsing">parsing</A></DT>
<DD>
<A HREF="../TclCmd/regexp.htm" TITLE="regexp - Match a regular expression against a string">regexp</A></DD>
<DT><A NAME="part">part</A></DT>
<DD>
<A HREF="../ItclCmd/ensemble.htm" TITLE="itcl::ensemble - create or modify a composite command">ensemble</A></DD>
<DT><A NAME="partial command">partial command</A></DT>
<DD>
<A HREF="../TclLib/CmdCmplt.htm" TITLE="Tcl_CommandComplete - Check for unmatched braces in a Tcl command">CmdCmplt</A></DD>
<DT><A NAME="patchlevel">patchlevel</A></DT>
<DD>
<A HREF="../TclLib/GetVersion.htm" TITLE="Tcl_GetVersion - get the version of the library at runtime">GetVersion</A></DD>
<DT><A NAME="path">path</A></DT>
<DD>
<A HREF="../TclLib/SplitPath.htm" TITLE="Tcl_SplitPath, Tcl_JoinPath, Tcl_GetPathType - manipulate platform-dependent file paths">SplitPath</A></DD>
<DT><A NAME="pattern">pattern</A></DT>
<DD>
<A HREF="../TclCmd/glob.htm" TITLE="glob - Return names of files that match patterns">glob</A>, <A HREF="../TclCmd/lsearch.htm" TITLE="lsearch - See if a list contains a particular element">lsearch</A>, <A HREF="../TclCmd/regexp.htm" TITLE="regexp - Match a regular expression against a string">regexp</A>, <A HREF="../TclCmd/regsub.htm" TITLE="regsub - Perform substitutions based on regular expression pattern matching">regsub</A>, <A HREF="../TclCmd/string.htm" TITLE="string - Manipulate strings">string</A>, <A HREF="../TclLib/RegExp.htm" TITLE="Tcl_RegExpMatch, Tcl_RegExpCompile, Tcl_RegExpExec, Tcl_RegExpRange, Tcl_GetRegExpFromObj, Tcl_RegExpMatchObj, Tcl_RegExpExecObj, Tcl_RegExpGetInfo - Pattern matching with regular expressions">RegExp</A>, <A HREF="../TclLib/StrMatch.htm" TITLE="Tcl_StringMatch, Tcl_StringCaseMatch - test whether a string matches a pattern">StrMatch</A></DD>
<DT><A NAME="performance measurement">performance measurement</A></DT>
<DD>
<A HREF="../TclCmd/timerate.htm" TITLE="timerate - Calibrated performance measurements of script execution time">timerate</A></DD>
<DT><A NAME="permissions">permissions</A></DT>
<DD>
<A HREF="../TclCmd/open.htm" TITLE="open - Open a file-based or command pipeline channel">open</A>, <A HREF="../TclLib/GetOpnFl.htm" TITLE="Tcl_GetOpenFile - Return a FILE* for a channel registered in the given interpreter (Unix only)">GetOpnFl</A></DD>
<DT><A NAME="pipeline">pipeline</A></DT>
<DD>
<A HREF="../TclCmd/exec.htm" TITLE="exec - Invoke subprocesses">exec</A>, <A HREF="../TclCmd/open.htm" TITLE="open - Open a file-based or command pipeline channel">open</A>, <A HREF="../TclCmd/pid.htm" TITLE="pid - Retrieve process identifiers">pid</A>, <A HREF="../TclLib/GetOpnFl.htm" TITLE="Tcl_GetOpenFile - Return a FILE* for a channel registered in the given interpreter (Unix only)">GetOpnFl</A></DD>
<DT><A NAME="platform">platform</A></DT>
<DD>
<A HREF="../TclCmd/fconfigure.htm" TITLE="fconfigure - Set and get options on a channel">fconfigure</A>, <A HREF="../TclCmd/platform.htm" TITLE="platform - System identification support code and utilities">platform</A>, <A HREF="../TclCmd/platform_shell.htm" TITLE="platform::shell - System identification support code and utilities">platform_shell</A></DD>
<DT><A NAME="portability">portability</A></DT>
<DD>
<A HREF="../TclCmd/filename.htm" TITLE="filename - File name conventions supported by Tcl commands">filename</A></DD>
<DT><A NAME="POSIX">POSIX</A></DT>
<DD>
<A HREF="../TclCmd/tclvars.htm" TITLE="argc, argv, argv0, auto_path, env, errorCode, errorInfo, tcl_interactive, tcl_library, tcl_nonwordchars, tcl_patchLevel, tcl_pkgPath, tcl_platform, tcl_precision, tcl_rcFileName, tcl_traceCompile, tcl_traceExec, tcl_wordchars, tcl_version - Variables used by Tcl">tclvars</A></DD>
<DT><A NAME="Postgres">Postgres</A></DT>
<DD>
<A HREF="../TdbcpostgresCmd/tdbc_postgres.htm" TITLE="tdbc::postgres - TDBC-POSTGRES bridge">tdbc_postgres</A></DD>
<DT><A NAME="precision">precision</A></DT>
<DD>
<A HREF="../TclCmd/tclvars.htm" TITLE="argc, argv, argv0, auto_path, env, errorCode, errorInfo, tcl_interactive, tcl_library, tcl_nonwordchars, tcl_patchLevel, tcl_pkgPath, tcl_platform, tcl_precision, tcl_rcFileName, tcl_traceCompile, tcl_traceExec, tcl_wordchars, tcl_version - Variables used by Tcl">tclvars</A></DD>
<DT><A NAME="prefix">prefix</A></DT>
<DD>
<A HREF="../TclCmd/prefix.htm" TITLE="tcl::prefix - facilities for prefix matching">prefix</A>, <A HREF="../TclCmd/refchan.htm" TITLE="refchan - command handler API of reflected channels">refchan</A>, <A HREF="../TclCmd/transchan.htm" TITLE="transchan - command handler API of channel transforms">transchan</A></DD>
<DT><A NAME="present">present</A></DT>
<DD>
<A HREF="../TclLib/PkgRequire.htm" TITLE="Tcl_PkgRequire, Tcl_PkgRequireEx, Tcl_PkgRequireProc, Tcl_PkgPresent, Tcl_PkgPresentEx, Tcl_PkgProvide, Tcl_PkgProvideEx - package version control">PkgRequire</A></DD>
<DT><A NAME="private">private</A></DT>
<DD>
<A HREF="../ItclCmd/code.htm" TITLE="itcl::code - capture the namespace context for a code fragment">code</A></DD>
<DT><A NAME="private method">private method</A></DT>
<DD>
<A HREF="../TclCmd/my.htm" TITLE="my - invoke any method of current object">my</A></DD>
<DT><A NAME="proc">proc</A></DT>
<DD>
<A HREF="../ItclCmd/delete.htm" TITLE="itcl::delete - delete things in the interpreter">delete</A>, <A HREF="../ItclCmd/itcldelegate.htm" TITLE="itcl::delegation - delegate methods, procs or options to other objects">itcldelegate</A></DD>
<DT><A NAME="procedure">procedure</A></DT>
<DD>
<A HREF="../TclCmd/apply.htm" TITLE="apply - Apply an anonymous function">apply</A>, <A HREF="../TclCmd/global.htm" TITLE="global - Access global variables">global</A>, <A HREF="../TclCmd/info.htm" TITLE="info - Return information about the state of the Tcl interpreter">info</A>, <A HREF="../TclCmd/proc.htm" TITLE="proc - Create a Tcl procedure">proc</A>, <A HREF="../TclCmd/return.htm" TITLE="return - Return from a procedure, or set return code of a script">return</A>, <A HREF="../TclCmd/upvar.htm" TITLE="upvar - Create link to variable in a different stack frame">upvar</A>, <A HREF="../TclCmd/variable.htm" TITLE="variable - create and initialize a namespace variable">variable</A>, <A HREF="../ItclCmd/body.htm" TITLE="itcl::body - change the body for a class method/proc">body</A>, <A HREF="../ItclCmd/local.htm" TITLE="itcl::local - create an object local to a procedure">local</A></DD>
<DT><A NAME="process">process</A></DT>
<DD>
<A HREF="../TclCmd/exit.htm" TITLE="exit - End the application">exit</A>, <A HREF="../TclCmd/open.htm" TITLE="open - Open a file-based or command pipeline channel">open</A>, <A HREF="../TclLib/DetachPids.htm" TITLE="Tcl_DetachPids, Tcl_ReapDetachedProcs, Tcl_WaitPid - manage child processes in background">DetachPids</A></DD>
<DT><A NAME="process identifier">process identifier</A></DT>
<DD>
<A HREF="../TclCmd/pid.htm" TITLE="pid - Retrieve process identifiers">pid</A></DD>
<DT><A NAME="prompt">prompt</A></DT>
<DD>
<A HREF="../UserCmd/tclsh.htm" TITLE="tclsh - Simple shell containing Tcl interpreter">tclsh</A></DD>
<DT><A NAME="protected">protected</A></DT>
<DD>
<A HREF="../ItclCmd/code.htm" TITLE="itcl::code - capture the namespace context for a code fragment">code</A></DD>
<DT><A NAME="provide">provide</A></DT>
<DD>
<A HREF="../TclLib/PkgRequire.htm" TITLE="Tcl_PkgRequire, Tcl_PkgRequireEx, Tcl_PkgRequireProc, Tcl_PkgPresent, Tcl_PkgPresentEx, Tcl_PkgProvide, Tcl_PkgProvideEx - package version control">PkgRequire</A></DD>
<DT><A NAME="public">public</A></DT>
<DD>
<A HREF="../ItclCmd/code.htm" TITLE="itcl::code - capture the namespace context for a code fragment">code</A></DD>
<DT><A NAME="public method">public method</A></DT>
<DD>
<A HREF="../TclCmd/my.htm" TITLE="my - invoke any method of current object">my</A></DD>
<DT><A NAME="pwd">pwd</A></DT>
<DD>
<A HREF="../TclLib/GetCwd.htm" TITLE="Tcl_GetCwd, Tcl_Chdir - manipulate the current working directory">GetCwd</A></DD>
</DL>
<div class="copy">Copyright &copy; 1989-1994 The Regents of the University of California
<BR>Copyright &copy; 1992-1999 Karl Lehenbauer &amp; Mark Diekhans
<BR>Copyright &copy; 1993-1997 Bell Labs Innovations for Lucent Technologies
<BR>Copyright &copy; 1993-1998 Lucent Technologies, Inc
<BR>Copyright &copy; 1994-2000 Sun Microsystems, Inc
<BR>Copyright &copy; 1997-2000 Ajuba Solutions
<BR>Copyright &copy; 1998 Mark Harrison
<BR>Copyright &copy; 1998-2000 Scriptics Corporation
<BR>Copyright &copy; 2001 ActiveState Tool Corp
<BR>Copyright &copy; 2001 Vincent Darley
<BR>Copyright &copy; 2001-2004 ActiveState Corporation
<BR>Copyright &copy; 2001-2005 Kevin B. Kenny &lt;kennykb(at)acm.org&gt;
<BR>Copyright &copy; 2001-2012 Donal K. Fellows
<BR>Copyright &copy; 2002-2010 Andreas Kupries &lt;andreas_kupries(at)users.sourceforge.net&gt;
<BR>Copyright &copy; 2003 George Petasis &lt;petasis(at)iit.demokritos.gr&gt;
<BR>Copyright &copy; 2003 Simon Geard
<BR>Copyright &copy; 2005 Sergey Brester aka sebres
<BR>Copyright &copy; 2006 Miguel Sofer
<BR>Copyright &copy; 2006-2008 ActiveState Software Inc
<BR>Copyright &copy; 2006-2008 Joe Mistachkin
<BR>Copyright &copy; 2008 Arnulf Wiedemann
<BR>Copyright &copy; 2008 Pat Thoyts
<BR>Copyright &copy; 2008 Peter Spjuth &lt;pspjuth(at)users.sourceforge.net&gt;
<BR>Copyright &copy; 2008-2010 Kevin B. Kenny
<BR>Copyright &copy; 2012 Trevor Davel
</div>
</BODY></HTML>
