<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML>
<HEAD><TITLE>Tk Keywords - C</TITLE>
<link rel="stylesheet" href="../docs.css" type="text/css" media="all">
</HEAD>
<BODY><H2><a href="../contents.htm">Tk8.6.16 Documentation</a> <small>&gt;</small> Tk Keywords - C</H2>
<H3><A HREF="../UserCmd/contents.htm">Tk Applications</A> | <A HREF="../TkCmd/contents.htm">Tk Commands</A> | <A HREF="../TkLib/contents.htm">Tk C API</A></H3>
<H3><A HREF="A.htm">A</A> |
<A HREF="B.htm">B</A> |
<A HREF="C.htm">C</A> |
<A HREF="D.htm">D</A> |
<A HREF="E.htm">E</A> |
<A HREF="F.htm">F</A> |
<A HREF="G.htm">G</A> |
<A HREF="H.htm">H</A> |
<A HREF="I.htm">I</A> |
<A HREF="J.htm">J</A> |
<A HREF="K.htm">K</A> |
<A HREF="L.htm">L</A> |
<A HREF="M.htm">M</A> |
<A HREF="N.htm">N</A> |
<A HREF="O.htm">O</A> |
<A HREF="P.htm">P</A> |
Q |
<A HREF="R.htm">R</A> |
<A HREF="S.htm">S</A> |
<A HREF="T.htm">T</A> |
<A HREF="U.htm">U</A> |
<A HREF="V.htm">V</A> |
<A HREF="W.htm">W</A> |
<A HREF="X.htm">X</A> |
<A HREF="Y.htm">Y</A> |
Z</H3>
<DL class="keylist">
<DT><A NAME="cache">cache</A></DT>
<DD>
<A HREF="../TkLib/InternAtom.htm" TITLE="Tk_InternAtom, Tk_GetAtomName - manage cache of X atoms">InternAtom</A></DD>
<DT><A NAME="callback">callback</A></DT>
<DD>
<A HREF="../TkLib/CrtCmHdlr.htm" TITLE="Tk_CreateClientMessageHandler, Tk_DeleteClientMessageHandler - associate procedure callback with ClientMessage type X events">CrtCmHdlr</A>, <A HREF="../TkLib/CrtErrHdlr.htm" TITLE="Tk_CreateErrorHandler, Tk_DeleteErrorHandler - handle X protocol errors">CrtErrHdlr</A>, <A HREF="../TkLib/CrtGenHdlr.htm" TITLE="Tk_CreateGenericHandler, Tk_DeleteGenericHandler - associate procedure callback with all X events">CrtGenHdlr</A>, <A HREF="../TkLib/EventHndlr.htm" TITLE="Tk_CreateEventHandler, Tk_DeleteEventHandler - associate procedure callback with an X event">EventHndlr</A>, <A HREF="../TkLib/HandleEvent.htm" TITLE="Tk_HandleEvent - invoke event handlers for window system events">HandleEvent</A>, <A HREF="../TkLib/ManageGeom.htm" TITLE="Tk_ManageGeometry - arrange to handle geometry requests for a window">ManageGeom</A>, <A HREF="../TkLib/QWinEvent.htm" TITLE="Tk_CollapseMotionEvents, Tk_QueueWindowEvent - Add a window event to the Tcl event queue">QWinEvent</A>, <A HREF="../TkLib/SetClassProcs.htm" TITLE="Tk_SetClassProcs - register widget specific procedures">SetClassProcs</A></DD>
<DT><A NAME="canvas">canvas</A></DT>
<DD>
<A HREF="../TkCmd/canvas.htm" TITLE="canvas - Create and manipulate 'canvas' hypergraphics drawing surface widgets">canvas</A>, <A HREF="../TkLib/CanvPsY.htm" TITLE="Tk_CanvasPsY, Tk_CanvasPsBitmap, Tk_CanvasPsColor, Tk_CanvasPsFont, Tk_CanvasPsPath, Tk_CanvasPsStipple - utility procedures for generating Postscript for canvases">CanvPsY</A>, <A HREF="../TkLib/CanvTkwin.htm" TITLE="Tk_CanvasTkwin, Tk_CanvasGetCoord, Tk_CanvasDrawableCoords, Tk_CanvasSetStippleOrigin, Tk_CanvasWindowCoords, Tk_CanvasEventuallyRedraw, Tk_CanvasTagsOption - utility procedures for canvas type managers">CanvTkwin</A>, <A HREF="../TkLib/CanvTxtInfo.htm" TITLE="Tk_CanvasTextInfo - additional information for managing text items in canvases">CanvTxtInfo</A>, <A HREF="../TkLib/CrtItemType.htm" TITLE="Tk_CreateItemType, Tk_GetItemTypes - define new kind of canvas item">CrtItemType</A></DD>
<DT><A NAME="cap style">cap style</A></DT>
<DD>
<A HREF="../TkLib/ConfigWidg.htm" TITLE="Tk_ConfigureWidget, Tk_ConfigureInfo, Tk_ConfigureValue, Tk_FreeOptions - process configuration options for widgets">ConfigWidg</A>, <A HREF="../TkLib/GetCapStyl.htm" TITLE="Tk_GetCapStyle, Tk_NameOfCapStyle - translate between strings and cap styles">GetCapStyl</A></DD>
<DT><A NAME="caret">caret</A></DT>
<DD>
<A HREF="../TkLib/SetCaret.htm" TITLE="Tk_SetCaretPos - set the display caret location">SetCaret</A></DD>
<DT><A NAME="cell">cell</A></DT>
<DD>
<A HREF="../TkCmd/grid.htm" TITLE="grid - Geometry manager that arranges widgets in a grid">grid</A></DD>
<DT><A NAME="center">center</A></DT>
<DD>
<A HREF="../TkLib/GetJustify.htm" TITLE="Tk_GetJustifyFromObj, Tk_GetJustify, Tk_NameOfJustify - translate between strings and justification styles">GetJustify</A></DD>
<DT><A NAME="centimeters">centimeters</A></DT>
<DD>
<A HREF="../TkLib/GetPixels.htm" TITLE="Tk_GetPixelsFromObj, Tk_GetPixels, Tk_GetMMFromObj, Tk_GetScreenMM - translate between strings and screen units">GetPixels</A></DD>
<DT><A NAME="check">check</A></DT>
<DD>
<A HREF="../TkCmd/ttk_checkbutton.htm" TITLE="ttk::checkbutton - On/off widget">ttk_checkbutton</A></DD>
<DT><A NAME="checkbutton">checkbutton</A></DT>
<DD>
<A HREF="../TkCmd/checkbutton.htm" TITLE="checkbutton - Create and manipulate 'checkbutton' boolean selection widgets">checkbutton</A></DD>
<DT><A NAME="child interpreter">child interpreter</A></DT>
<DD>
<A HREF="../TkCmd/loadTk.htm" TITLE="safe::loadTk - Load Tk into a safe interpreter.">loadTk</A></DD>
<DT><A NAME="children">children</A></DT>
<DD>
<A HREF="../TkCmd/winfo.htm" TITLE="winfo - Return window-related information">winfo</A></DD>
<DT><A NAME="choice">choice</A></DT>
<DD>
<A HREF="../TkCmd/ttk_combobox.htm" TITLE="ttk::combobox - text field with popdown selection list">ttk_combobox</A></DD>
<DT><A NAME="class">class</A></DT>
<DD>
<A HREF="../TkCmd/options.htm" TITLE="options - Standard options supported by widgets">options</A>, <A HREF="../TkCmd/winfo.htm" TITLE="winfo - Return window-related information">winfo</A>, <A HREF="../TkLib/AddOption.htm" TITLE="Tk_AddOption - Add an option to the option database">AddOption</A>, <A HREF="../TkLib/GetOption.htm" TITLE="Tk_GetOption - retrieve an option from the option database">GetOption</A>, <A HREF="../TkLib/SetClass.htm" TITLE="Tk_SetClass, Tk_Class - set or retrieve a window's class">SetClass</A>, <A HREF="../TkLib/SetClassProcs.htm" TITLE="Tk_SetClassProcs - register widget specific procedures">SetClassProcs</A></DD>
<DT><A NAME="clear">clear</A></DT>
<DD>
<A HREF="../TkCmd/clipboard.htm" TITLE="clipboard - Manipulate Tk clipboard">clipboard</A>, <A HREF="../TkCmd/selection.htm" TITLE="selection - Manipulate the X selection">selection</A>, <A HREF="../TkLib/Clipboard.htm" TITLE="Tk_ClipboardClear, Tk_ClipboardAppend - Manage the clipboard">Clipboard</A>, <A HREF="../TkLib/ClrSelect.htm" TITLE="Tk_ClearSelection - Deselect a selection">ClrSelect</A></DD>
<DT><A NAME="clipboard">clipboard</A></DT>
<DD>
<A HREF="../TkCmd/clipboard.htm" TITLE="clipboard - Manipulate Tk clipboard">clipboard</A>, <A HREF="../TkLib/Clipboard.htm" TITLE="Tk_ClipboardClear, Tk_ClipboardAppend - Manage the clipboard">Clipboard</A></DD>
<DT><A NAME="clock">clock</A></DT>
<DD>
<A HREF="../TkLib/QWinEvent.htm" TITLE="Tk_CollapseMotionEvents, Tk_QueueWindowEvent - Add a window event to the Tcl event queue">QWinEvent</A></DD>
<DT><A NAME="color">color</A></DT>
<DD>
<A HREF="../TkCmd/chooseColor.htm" TITLE="tk_chooseColor - pops up a dialog box for the user to select a color.">chooseColor</A>, <A HREF="../TkCmd/colors.htm" TITLE="colors - symbolic color names recognized by Tk">colors</A>, <A HREF="../TkCmd/palette.htm" TITLE="tk_setPalette, tk_bisque - Modify the Tk color palette">palette</A>, <A HREF="../TkCmd/photo.htm" TITLE="photo - Full-color images">photo</A>, <A HREF="../TkLib/3DBorder.htm" TITLE="Tk_Alloc3DBorderFromObj, Tk_Get3DBorder, Tk_Get3DBorderFromObj, Tk_Draw3DRectangle, Tk_Fill3DRectangle, Tk_Draw3DPolygon, Tk_Fill3DPolygon, Tk_3DVerticalBevel, Tk_3DHorizontalBevel, Tk_SetBackgroundFromBorder, Tk_NameOf3DBorder, Tk_3DBorderColor, Tk_3DBorderGC, Tk_Free3DBorderFromObj, Tk_Free3DBorder - draw borders with three-dimensional appearance">3DBorder</A>, <A HREF="../TkLib/CanvPsY.htm" TITLE="Tk_CanvasPsY, Tk_CanvasPsBitmap, Tk_CanvasPsColor, Tk_CanvasPsFont, Tk_CanvasPsPath, Tk_CanvasPsStipple - utility procedures for generating Postscript for canvases">CanvPsY</A>, <A HREF="../TkLib/ConfigWidg.htm" TITLE="Tk_ConfigureWidget, Tk_ConfigureInfo, Tk_ConfigureValue, Tk_FreeOptions - process configuration options for widgets">ConfigWidg</A>, <A HREF="../TkLib/ConfigWind.htm" TITLE="Tk_ConfigureWindow, Tk_MoveWindow, Tk_ResizeWindow, Tk_MoveResizeWindow, Tk_SetWindowBorderWidth, Tk_ChangeWindowAttributes, Tk_SetWindowBackground, Tk_SetWindowBackgroundPixmap, Tk_SetWindowBorder, Tk_SetWindowBorderPixmap, Tk_SetWindowColormap, Tk_DefineCursor, Tk_UndefineCursor - change window configuration or attributes">ConfigWind</A>, <A HREF="../TkLib/GetColor.htm" TITLE="Tk_AllocColorFromObj, Tk_GetColor, Tk_GetColorFromObj, Tk_GetColorByValue, Tk_NameOfColor, Tk_FreeColorFromObj, Tk_FreeColor - maintain database of colors">GetColor</A>, <A HREF="../TkLib/SetOptions.htm" TITLE="Tk_CreateOptionTable, Tk_DeleteOptionTable, Tk_InitOptions, Tk_SetOptions, Tk_FreeSavedOptions, Tk_RestoreSavedOptions, Tk_GetOptionValue,  Tk_GetOptionInfo, Tk_FreeConfigOptions, Tk_Offset - process configuration options">SetOptions</A></DD>
<DT><A NAME="color selection">color selection</A></DT>
<DD>
<A HREF="../TkCmd/chooseColor.htm" TITLE="tk_chooseColor - pops up a dialog box for the user to select a color.">chooseColor</A></DD>
<DT><A NAME="colormap">colormap</A></DT>
<DD>
<A HREF="../TkLib/GetClrmap.htm" TITLE="Tk_GetColormap, Tk_PreserveColormap, Tk_FreeColormap - allocate and free colormaps">GetClrmap</A>, <A HREF="../TkLib/GetVisual.htm" TITLE="Tk_GetVisual - translate from string to visual">GetVisual</A>, <A HREF="../TkLib/SetVisual.htm" TITLE="Tk_SetWindowVisual - change visual characteristics of window">SetVisual</A>, <A HREF="../TkLib/WindowId.htm" TITLE="Tk_WindowId, Tk_Parent, Tk_Display, Tk_DisplayName, Tk_ScreenNumber, Tk_Screen, Tk_X, Tk_Y, Tk_Width, Tk_Height, Tk_Changes, Tk_Attributes, Tk_IsContainer, Tk_IsEmbedded, Tk_IsMapped, Tk_IsTopLevel, Tk_ReqWidth, Tk_ReqHeight, Tk_MinReqWidth, Tk_MinReqHeight, Tk_InternalBorderLeft, Tk_InternalBorderRight, Tk_InternalBorderTop, Tk_InternalBorderBottom, Tk_Visual, Tk_Depth, Tk_Colormap, Tk_Interp  - retrieve information from Tk's local data structure">WindowId</A></DD>
<DT><A NAME="command">command</A></DT>
<DD>
<A HREF="../TkCmd/ttk_button.htm" TITLE="ttk::button - Widget that issues a command when pressed">ttk_button</A></DD>
<DT><A NAME="command line">command line</A></DT>
<DD>
<A HREF="../TkLib/ParseArgv.htm" TITLE="Tk_ParseArgv - process command-line options">ParseArgv</A></DD>
<DT><A NAME="command-line arguments">command-line arguments</A></DT>
<DD>
<A HREF="../TkLib/Tk_Main.htm" TITLE="Tk_Main - main program for Tk-based applications">Tk_Main</A></DD>
<DT><A NAME="configuration option">configuration option</A></DT>
<DD>
<A HREF="../TkLib/SetOptions.htm" TITLE="Tk_CreateOptionTable, Tk_DeleteOptionTable, Tk_InitOptions, Tk_SetOptions, Tk_FreeSavedOptions, Tk_RestoreSavedOptions, Tk_GetOptionValue,  Tk_GetOptionInfo, Tk_FreeConfigOptions, Tk_Offset - process configuration options">SetOptions</A></DD>
<DT><A NAME="configuration options">configuration options</A></DT>
<DD>
<A HREF="../TkLib/ConfigWidg.htm" TITLE="Tk_ConfigureWidget, Tk_ConfigureInfo, Tk_ConfigureValue, Tk_FreeOptions - process configuration options for widgets">ConfigWidg</A></DD>
<DT><A NAME="configure">configure</A></DT>
<DD>
<A HREF="../TkCmd/ttk_widget.htm" TITLE="ttk::widget - Standard options and commands supported by Tk themed widgets">ttk_widget</A>, <A HREF="../TkLib/ConfigWind.htm" TITLE="Tk_ConfigureWindow, Tk_MoveWindow, Tk_ResizeWindow, Tk_MoveResizeWindow, Tk_SetWindowBorderWidth, Tk_ChangeWindowAttributes, Tk_SetWindowBackground, Tk_SetWindowBackgroundPixmap, Tk_SetWindowBorder, Tk_SetWindowBorderPixmap, Tk_SetWindowColormap, Tk_DefineCursor, Tk_UndefineCursor - change window configuration or attributes">ConfigWind</A></DD>
<DT><A NAME="console">console</A></DT>
<DD>
<A HREF="../TkCmd/console.htm" TITLE="console - Control the console on systems without a real console">console</A>, <A HREF="../TkLib/CrtConsoleChan.htm" TITLE="Tk_InitConsoleChannels - Install the console channels as standard channels">CrtConsoleChan</A></DD>
<DT><A NAME="container">container</A></DT>
<DD>
<A HREF="../TkCmd/place.htm" TITLE="place - Geometry manager for fixed or rubber-sheet placement">place</A>, <A HREF="../TkCmd/ttk_frame.htm" TITLE="ttk::frame - Simple container widget">ttk_frame</A>, <A HREF="../TkCmd/ttk_labelframe.htm" TITLE="ttk::labelframe - Container widget with optional label">ttk_labelframe</A>, <A HREF="../TkLib/MaintGeom.htm" TITLE="Tk_MaintainGeometry, Tk_UnmaintainGeometry - maintain geometry of one window relative to another">MaintGeom</A></DD>
<DT><A NAME="containing">containing</A></DT>
<DD>
<A HREF="../TkLib/CoordToWin.htm" TITLE="Tk_CoordsToWindow - Find window containing a point">CoordToWin</A></DD>
<DT><A NAME="content">content</A></DT>
<DD>
<A HREF="../TkCmd/place.htm" TITLE="place - Geometry manager for fixed or rubber-sheet placement">place</A></DD>
<DT><A NAME="conversion">conversion</A></DT>
<DD>
<A HREF="../TkLib/GetDash.htm" TITLE="Tk_GetDash - convert from string to valid dash structure.">GetDash</A></DD>
<DT><A NAME="convert">convert</A></DT>
<DD>
<A HREF="../TkLib/GetPixels.htm" TITLE="Tk_GetPixelsFromObj, Tk_GetPixels, Tk_GetMMFromObj, Tk_GetScreenMM - translate between strings and screen units">GetPixels</A></DD>
<DT><A NAME="coordinates">coordinates</A></DT>
<DD>
<A HREF="../TkLib/CoordToWin.htm" TITLE="Tk_CoordsToWindow - Find window containing a point">CoordToWin</A>, <A HREF="../TkLib/GetRootCrd.htm" TITLE="Tk_GetRootCoords - Compute root-window coordinates of window">GetRootCrd</A></DD>
<DT><A NAME="create">create</A></DT>
<DD>
<A HREF="../TkLib/CrtWindow.htm" TITLE="Tk_CreateWindow, Tk_CreateWindowFromPath, Tk_DestroyWindow, Tk_MakeWindowExist - create or delete window">CrtWindow</A></DD>
<DT><A NAME="cursor">cursor</A></DT>
<DD>
<A HREF="../TkCmd/cursors.htm" TITLE="cursors - mouse cursors available in Tk">cursors</A>, <A HREF="../TkLib/ConfigWidg.htm" TITLE="Tk_ConfigureWidget, Tk_ConfigureInfo, Tk_ConfigureValue, Tk_FreeOptions - process configuration options for widgets">ConfigWidg</A>, <A HREF="../TkLib/GetCursor.htm" TITLE="Tk_AllocCursorFromObj, Tk_GetCursor, Tk_GetCursorFromObj, Tk_GetCursorFromData, Tk_NameOfCursor, Tk_FreeCursorFromObj, Tk_FreeCursor - maintain database of cursors">GetCursor</A>, <A HREF="../TkLib/SetCaret.htm" TITLE="Tk_SetCaretPos - set the display caret location">SetCaret</A>, <A HREF="../TkLib/SetOptions.htm" TITLE="Tk_CreateOptionTable, Tk_DeleteOptionTable, Tk_InitOptions, Tk_SetOptions, Tk_FreeSavedOptions, Tk_RestoreSavedOptions, Tk_GetOptionValue,  Tk_GetOptionInfo, Tk_FreeConfigOptions, Tk_Offset - process configuration options">SetOptions</A></DD>
<DT><A NAME="custom">custom</A></DT>
<DD>
<A HREF="../TkLib/ConfigWidg.htm" TITLE="Tk_ConfigureWidget, Tk_ConfigureInfo, Tk_ConfigureValue, Tk_FreeOptions - process configuration options for widgets">ConfigWidg</A></DD>
</DL>
<div class="copy">Copyright &copy; 1989-1994 The Regents of the University of California
<BR>Copyright &copy; 1993-1998 Lucent Technologies, Inc
<BR>Copyright &copy; 1994 The Australian National University
<BR>Copyright &copy; 1994-1998 Sun Microsystems, Inc
<BR>Copyright &copy; 1997-2000 Scriptics Corporation
<BR>Copyright &copy; 1998-2000 Ajuba Solutions
<BR>Copyright &copy; 2000 Jeffrey Hobbs
<BR>Copyright &copy; 2001-2011 Donal K. Fellows
<BR>Copyright &copy; 2002-2003 ActiveState Corporation
<BR>Copyright &copy; 2003-2006 Joe English
<BR>Copyright &copy; 2006-2008 Daniel A. Steffen &lt;das(at)users.sourceforge.net&gt;
<BR>Copyright &copy; 2007 ActiveState Software Inc
<BR>Copyright &copy; 2008 Jos Decoster
<BR>Copyright &copy; 2008 Pat Thoyts
<BR>Copyright &copy; 2011 Kevin Walzer
</div>
</BODY></HTML>
